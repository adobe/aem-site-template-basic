# Creates a Site Template Release 

name: Build and release Site Template

on:
  workflow_dispatch:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Install NPM dependencies
        run: npm install

      - name: Build Site Template
        run: npm run build

      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./package.json

      - name: Extract name and version from package.json
        id: packageJson
        run: |
          echo ::set-output name=NAME::$(echo "${{ steps.package.outputs.content }}" | jq -r '.name')
          echo ::set-output name=VERSION::$(echo "${{ steps.package.outputs.content }}" | jq -r '.version')

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.packageJson.outputs.VERSION }}
          release_name: ${{ steps.packageJson.outputs.NAME }}-${{ steps.packageJson.outputs.VERSION }}
          draft: false
          prerelease: true
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./${{ steps.packageJson.outputs.NAME }}-${{ steps.packageJson.outputs.VERSION }}.zip
          asset_name: ${{ steps.packageJson.outputs.NAME }}-${{ steps.packageJson.outputs.VERSION }}.zip
          asset_content_type: application/zip
